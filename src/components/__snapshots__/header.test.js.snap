// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`has the title TicTacToe 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "as": "section",
      "bold": true,
      "children": <Hero.Body>
        <Container>
          <Title
            as="h1"
            is="1"
            spaced={false}
          >
            TicTacToe
          </Title>
        </Container>
      </Hero.Body>,
      "primary": true,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Container>
          <Title
            as="h1"
            is="1"
            spaced={false}
          >
            TicTacToe
          </Title>
        </Container>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Title
            as="h1"
            is="1"
            spaced={false}
          >
            TicTacToe
          </Title>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "h1",
            "children": "TicTacToe",
            "is": "1",
            "spaced": false,
          },
          "ref": null,
          "rendered": "TicTacToe",
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "as": "section",
        "bold": true,
        "children": <Hero.Body>
          <Container>
            <Title
              as="h1"
              is="1"
              spaced={false}
            >
              TicTacToe
            </Title>
          </Container>
        </Hero.Body>,
        "primary": true,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Container>
            <Title
              as="h1"
              is="1"
              spaced={false}
            >
              TicTacToe
            </Title>
          </Container>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Title
              as="h1"
              is="1"
              spaced={false}
            >
              TicTacToe
            </Title>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "as": "h1",
              "children": "TicTacToe",
              "is": "1",
              "spaced": false,
            },
            "ref": null,
            "rendered": "TicTacToe",
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
